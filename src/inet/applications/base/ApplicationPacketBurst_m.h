//
// Generated file, do not edit! Created by nedtool 5.0 from inet/applications/base/ApplicationPacketBurst.msg.
//

#ifndef __INET_APPLICATIONPACKETBURST_M_H
#define __INET_APPLICATIONPACKETBURST_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

/**
 * Class generated from <tt>inet/applications/base/ApplicationPacketBurst.msg:24</tt> by nedtool.
 * <pre>
 * //
 * // Generic application packet
 * //
 * packet ApplicationPacketBurst
 * {
 *     long sequenceNumber;
 *     simtime_t timeSent;
 *     int byteSent;
 * }
 * </pre>
 */
class ApplicationPacketBurst : public ::omnetpp::cPacket
{
  protected:
    long sequenceNumber;
    ::omnetpp::simtime_t timeSent;
    int byteSent;

  private:
    void copy(const ApplicationPacketBurst& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ApplicationPacketBurst&);

  public:
    ApplicationPacketBurst(const char *name=nullptr, int kind=0);
    ApplicationPacketBurst(const ApplicationPacketBurst& other);
    virtual ~ApplicationPacketBurst();
    ApplicationPacketBurst& operator=(const ApplicationPacketBurst& other);
    virtual ApplicationPacketBurst *dup() const {return new ApplicationPacketBurst(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual long getSequenceNumber() const;
    virtual void setSequenceNumber(long sequenceNumber);
    virtual ::omnetpp::simtime_t getTimeSent() const;
    virtual void setTimeSent(::omnetpp::simtime_t timeSent);
    virtual int getByteSent() const;
    virtual void setByteSent(int byteSent);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ApplicationPacketBurst& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ApplicationPacketBurst& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_APPLICATIONPACKETBURST_M_H

